###  .def file syntax guide:  ###

# (comment)
==(name);
  (header) = (body);
  (header) = 
    (multiline
    body);
  versionHistory = 
    (Update 1): (change 1), (change 2) + (Update 2): (change 3) + (...);
  infobox = 
    (infobox);

double equals (==) separates pages
equals with spaces ( = ) separates section header and section body
semicolon (;) separates sections

###  infobox help:  ###

only if weapon |
               v
    >(parts json)
    | {{name}} : (name of thing)
    | [[image]] : (imageurl)
    | (group name)
    | (property) : (value)
    | [[navigator]] : (label)@(pagename)~(imageurl) + (...)

vertical pipe (|) separates components
[[image]] and [[navigator]] are special component types:
  [[image]] inserts an image
  [[navigator]] inserts a horizontal list of items with links and images
    use [[navigator*]] to get the navigator from a component
colon with spaces ( : ) separates property and value
{{name}} is a special property: it changes the title bar of the box

###  formatting syntax   ###
Replacement for html tags in .def
works in: 
- page titles (sort of)
- page section headers (not [.class/ ... ], [c: ... / ... ] or [h: ... / ... ])
- page section bodies
- infobox group names
- infobox property names and values
- infobox navigator labels
- infobox titles (with {{name}})

Valid codes:
- [b/ ... ] = bold text
- [i/ ... ] = italic text
- [u/ ... ] = underlined text
- [s/ ... ] = struck through text
- [-> ... ] = link to page with specified name
- [-> ... as ... ] = link to page with specified name showing specified text 
- [-> ... as ... unf] = link to page with specified name showing specified text, inheriting previous formatting
- [-^ ... ] = link to external page with specified URL
- [-^ ... as ... ] = link to external page with specified URL, showing the second input as text
- [-^ ... as ... unf] = link to external page with specified URL, showing the second input as text, inheriting previous formatting
- [c:(colour)/ ... ] = coloured text
- [h:(colour)/ ... ] = highlighted text
- [br] = line break
- [.(class)/ ... ] = <span> with (class) as a class.
- [img/ ... ] = icon with specified name (not case sensitive)
- [{ ... }] = insert a reusable component from components.def.
- [{ ... : a : b : ... }] = insert component, replacing placeholders with `a`, `b`, ...

- [// ... ] = code-formatted text.
- [k/ ... ] = represents keystroke, like the HTML <kbd> element

b, i, u and s codes are semantically neutral.
img codes can display any one of these icons:
- shard
- bloonstone

- ballistic
- normal
- fire
- explosion
- radiation
- laser
- collision
- electric
- ice

- projectile
- point
- beam
- contact

- independent
- assisted
- manual

- integrate
- isl

Useful [.(class)/ ... ] class names:
- warn: Makes background and text red, can be applied to sections with (title)! = (body);
- c: Centers text, can be applied to sections with (title): = (body);
- unf: Removes formatting, everything is inherited
- bq: Formats contents as a blockquote

- head: Formats as a header block
- ur: (For header blocks) Unreleased.
- rm: (For header blocks) Removed.
- rc: (For header blocks) Recently released.
- uc: (For header blocks) Unconfirmed.
- ic: (For header blocks) Incomplete page.
- in: (For header blocks) Outdated information.
- cm: (For header blocks) Community content.
- tc: (For header blocks) Technical.

- buff: (For history items) This change made the subject of the page better
- nerf: (For history items) This change made the subject of the page worse
- neutral: (For history items) This change did not change the viability of the subject of the page
- undoc: (For history items) This change was undocumented in the changelogs

Codes can be nested up to 3 times. Anything after that will ignore outer tags.
Invalid codes will display without the square brackets.
To type square brackets, use [\ ... ]. This still takes up a nesting level.

In others.def, no fields except 'title', 'class' and 'versionHistory' are defined, and even then only 'title' is required.
Additionally, any section pair creates a new section, unless the title is surrounded with ( ).
There is an additional field, 'before', which places text outside of any section.
There are additional codes available in 'before':
- [q/ ... ] = Block quote with specified text.
- [q/ ... -- ...] = Block quote with specified text, citing the specified source.

If none of these codes fufil the requirement, the code
  [html/ ... ] = html override
can be used to insert HTML directly.


### components ###
Defines reusable parts to insert using the special syntax [{ ... }].
Defined using `(name) = (value);`. You can add placeholders in the form {n}, where n ∈ ℕ.
These will be replaced with values in the code:
[{ ... : a : b : c : ... }]
{1} will be replaced with a, {2} with b, and so forth.
Any extra placeholders will be filled with `<?>`.